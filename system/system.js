(() => {
    "use strict";
    var e = {
            735: (e, n, t) => {
                t.d(n, {
                    Z: () => i
                });
                var a = t(537),
                    s = t.n(a),
                    c = t(645),
                    r = t.n(c)()(s());
                r.push([e.id, '@font-face{font-family:"brokencompass";src:url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710");src:url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710#iefix") format("embedded-opentype"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff2?27449710") format("woff2"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff?27449710") format("woff"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.ttf?27449710") format("truetype"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.svg?27449710#brokencompass") format("svg");font-weight:normal;font-style:normal}[class^=icon-]::before,[class*=" icon-"]::before{font-family:"brokencompass";font-style:normal;font-weight:normal;speak:never;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-diamond_black_down::before{content:""}.icon-diamond_black_up::before{content:""}.icon-diamond_white_down::before{content:""}.icon-diamond_white_up::before{content:""}.bc__ac__body{display:grid;grid-template-columns:280px repeat(4, 1fr);grid-template-rows:auto;grid-gap:1rem;width:750px;grid-template-areas:"description description description portrait portrait" "skills diceTray diceTray diceTray diceTray" "skills luck luck luck luck" "skills feelings feelings feelings feelings" "skills expertise expertise scars scars" "skills weapons weapons weapons weapons" "skills pockets pockets bag bag" "skills backpack backpack mags mags" "skills . . . ."}.bc__ac__row{display:flex;gap:.5rem;margin-bottom:.5rem}.bc__ac__c_row{display:flex;gap:.5rem;align-items:center;justify-content:center;margin-bottom:.5rem}.bc__ac__subheading{font-size:1.3rem;text-align:center;font-weight:500;line-height:1;height:2.3rem;display:flex;justify-content:center;align-items:flex-end}.bc__ac__label{flex:1 1 auto;white-space:nowrap}.bc__ac__dice-tray{grid-area:diceTray}.bc__ac__dice-tray__dice{display:flex}.bc__ac__value-indicator{width:4em;display:flex;margin:0 0 0 .5rem}.bc__ac__value-indicator span{width:1em;margin:0 -0.1em;padding:0;display:inline-block;cursor:pointer}.bc__ac__value-indicator span::before{margin:0}.bc__ac__input{flex:1 1 auto}input[type=text]{background:#fff;border-radius:0}.bc__ac__label{height:26px;line-height:26px}.bc__ac__backpack{grid-area:backpack;display:flex;flex-direction:column}.bc__ac__bag{grid-area:bag;display:flex;flex-direction:column}.bc__ac__description{grid-area:description}.bc__ac__description input[type=text]{background:transparent;border-top:none;border-right:none;border-left:none;border-radius:0;font-weight:600}.bc__ac__portrait{grid-area:portrait;background:#fff}.bc__ac__portrait img{vertical-align:bottom}.bc__ac__scars_experience{grid-area:scars;display:flex;flex-direction:column;gap:.5rem}.bc__ac__expertise{grid-area:expertise;display:flex;flex-direction:column;gap:.5rem}.bc__ac__feelings{grid-area:feelings}.bc__ac__i_feel__state{width:7rem}.bc__ac__i_feel__state:first-child{text-align:right}.bc__ac__i_feel__state span{cursor:pointer}.bc__ac__i_feel__state span::before{margin:0}.bc__ac__i_feel__field{width:4.5rem;text-align:center;font-size:.8rem;color:#bbb;display:flex;flex-direction:column;gap:.5rem}.bc__ac__fields_and_skills{grid-area:skills}.bc-actorsheet-skills{margin-bottom:3rem}.bc__ac-skills{display:flex;font-size:1.2rem;justify-content:flex-end}.bc__ac-fields{display:flex;font-size:1.5rem;justify-content:flex-end;margin-right:3rem}.bc__ac__the_luck{grid-area:luck}.bc__ac__the_luck__row{display:flex;align-items:center}input[type=text].bc__ac__the_luck__max_luck{width:1.5rem;margin-left:.5rem;margin-right:auto}.bc__ac__the_luck__count{margin-right:auto;font-size:.8rem}.bc__ac__the_luck__count input[type=checkbox]{margin:0}.bc__ac__the_luck__coin{display:flex;flex-direction:column;align-items:center;justify-content:center}input[type=text].bc__ac__the_luck__luck_coins{width:2rem;height:2rem;font-size:1.5rem;text-align:center;line-height:2rem;padding:0}.bc__ac__mags{grid-area:mags;display:flex;flex-direction:column;gap:.5rem}.bc__ac__mags__row{display:flex;gap:.25rem}.bc__ac__mags__row span:first-child{flex:1 1 auto}.bc__ac__mags__pocket,.bc__ac__mags__bag,.bc__ac__mags__backpack{flex:0 0 2rem}.bc__ac__mags__label{overflow:hidden;font-size:.4rem;color:#666;text-transform:uppercase;flex:0 0 2rem;text-align:center}.bc__ac__pockets{grid-area:pockets;display:flex;flex-direction:column}.bc__ac__weapons_gear{grid-area:weapons;display:flex;flex-direction:column;gap:.5rem}.bc__ac__weapons_gear__row{display:flex;align-items:center}.bc__ac__weapons_gear__name{flex:1 1 30%}.bc__ac__weapons_gear__description,input[type=text].bc__ac__weapons_gear__description{flex:2 1 70%;font-size:.8em;height:20px}', "", {
                    version: 3,
                    sources: ["webpack://./src/scss/styles.scss", "webpack://./src/scss/_fontello-bc.scss", "webpack://./src/scss/_actor-sheet/_layout.scss", "webpack://./src/scss/_actor-sheet/_typografie.scss", "webpack://./src/scss/_actor-sheet/_dice-tray.scss", "webpack://./src/scss/_actor-sheet/_form.scss", "webpack://./src/scss/_actor-sheet/_backpack.scss", "webpack://./src/scss/_actor-sheet/_bag.scss", "webpack://./src/scss/_actor-sheet/_description.scss", "webpack://./src/scss/_actor-sheet/_portrait.scss", "webpack://./src/scss/_actor-sheet/_experience.scss", "webpack://./src/scss/_actor-sheet/_expertise.scss", "webpack://./src/scss/_actor-sheet/_feelings.scss", "webpack://./src/scss/_actor-sheet/_fields_and_skills.scss", "webpack://./src/scss/_actor-sheet/_luck.scss", "webpack://./src/scss/_actor-sheet/_mags.scss", "webpack://./src/scss/_actor-sheet/_pockets.scss", "webpack://./src/scss/_actor-sheet/_weapons_gear.scss"],
                    names: [],
                    mappings: "AAAA,WCAA,2BACE,CAAA,qFACA,CAAA,ghBACA,CAAA,kBAKA,CAAA,iBACA,CAAA,iDAcF,2BAEE,CAAA,iBACA,CAAA,kBACA,CAAA,WACA,CAAA,oBAEA,CAAA,uBACA,CAAA,SACA,CAAA,iBACA,CAAA,iBACA,CAAA,mBAIA,CAAA,mBACA,CAAA,eAGA,CAAA,gBAIA,CAAA,kCAMA,CAAA,iCACA,CAAA,iCAMF,WACE,CAAA,+BAIF,WACE,CAAA,iCAIF,WACE,CAAA,+BAIF,WACE,CAAA,cC3EF,YACE,CAAA,0CACA,CAAA,uBACA,CAAA,aACA,CAAA,WACA,CAAA,2WAGE,CAAA,aAWJ,YACE,CAAA,SACA,CAAA,mBACA,CAAA,eAGF,YACE,CAAA,SACA,CAAA,kBACA,CAAA,sBACA,CAAA,mBACA,CAAA,oBC9BF,gBACE,CAAA,iBACA,CAAA,eACA,CAAA,aACA,CAAA,aACA,CAAA,YACA,CAAA,sBACA,CAAA,oBACA,CAAA,eAGF,aACE,CAAA,kBACA,CAAA,mBCbF,kBACE,CAAA,yBAGF,YACE,CAAA,yBCLF,SACE,CAAA,YACA,CAAA,kBACA,CAAA,8BAEA,SACE,CAAA,eACA,CAAA,SACA,CAAA,oBACA,CAAA,cAEA,CAAA,sCAEA,QACE,CAAA,eAKN,aACE,CAAA,iBAGF,eACE,CAAA,eACA,CAAA,eAGF,WACE,CAAA,gBACA,CAAA,kBC9BF,kBACE,CAAA,YACA,CAAA,qBACA,CAAA,aCHF,aACE,CAAA,YACA,CAAA,qBACA,CAAA,qBCHF,qBACE,CAAA,sCAEA,sBACE,CAAA,eACA,CAAA,iBACA,CAAA,gBACA,CAAA,eACA,CAAA,eACA,CAAA,kBCTJ,kBACE,CAAA,eACA,CAAA,sBAEA,qBACE,CAAA,0BCLJ,eACE,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,mBCJF,mBACE,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,kBCJF,kBACE,CAAA,uBAGF,UACE,CAAA,mCAEA,gBACE,CAAA,4BAGF,cACE,CAAA,oCAEA,QACE,CAAA,uBAKN,YACE,CAAA,iBACA,CAAA,eACA,CAAA,UACA,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,2BC3BF,gBACE,CAAA,sBAGF,kBACE,CAAA,eAGF,YACE,CAAA,gBACA,CAAA,wBACA,CAAA,eAGF,YACE,CAAA,gBACA,CAAA,wBACA,CAAA,iBACA,CAAA,kBClBF,cACE,CAAA,uBAGF,YACE,CAAA,kBACA,CAAA,4CAGF,YACE,CAAA,iBACA,CAAA,iBACA,CAAA,yBAGF,iBACE,CAAA,eACA,CAAA,8CAEA,QACE,CAAA,wBAIJ,YACE,CAAA,qBACA,CAAA,kBACA,CAAA,sBACA,CAAA,8CAGF,UACE,CAAA,WACA,CAAA,gBACA,CAAA,iBACA,CAAA,gBACA,CAAA,SACA,CAAA,cCrCF,cACE,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,mBAGF,YACE,CAAA,UACA,CAAA,oCAEA,aACE,CAAA,iEAIJ,aAGE,CAAA,qBAGF,eACE,CAAA,eACA,CAAA,UACA,CAAA,wBACA,CAAA,aACA,CAAA,iBACA,CAAA,iBC5BF,iBACE,CAAA,YACA,CAAA,qBACA,CAAA,sBCHF,iBACE,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,2BAGF,YACE,CAAA,kBACA,CAAA,4BAGF,YACE,CAAA,sFAGF,YAEE,CAAA,cACA,CAAA,WACA",
                    sourcesContent: ['@font-face{font-family:"brokencompass";src:url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710");src:url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710#iefix") format("embedded-opentype"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff2?27449710") format("woff2"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff?27449710") format("woff"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.ttf?27449710") format("truetype"),url("./systems/brokencompass/assets/font/fontello-bc/brokencompass.svg?27449710#brokencompass") format("svg");font-weight:normal;font-style:normal}[class^=icon-]::before,[class*=" icon-"]::before{font-family:"brokencompass";font-style:normal;font-weight:normal;speak:never;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-diamond_black_down::before{content:""}.icon-diamond_black_up::before{content:""}.icon-diamond_white_down::before{content:""}.icon-diamond_white_up::before{content:""}.bc__ac__body{display:grid;grid-template-columns:280px repeat(4, 1fr);grid-template-rows:auto;grid-gap:1rem;width:750px;grid-template-areas:"description description description portrait portrait" "skills diceTray diceTray diceTray diceTray" "skills luck luck luck luck" "skills feelings feelings feelings feelings" "skills expertise expertise scars scars" "skills weapons weapons weapons weapons" "skills pockets pockets bag bag" "skills backpack backpack mags mags" "skills . . . ."}.bc__ac__row{display:flex;gap:.5rem;margin-bottom:.5rem}.bc__ac__c_row{display:flex;gap:.5rem;align-items:center;justify-content:center;margin-bottom:.5rem}.bc__ac__subheading{font-size:1.3rem;text-align:center;font-weight:500;line-height:1;height:2.3rem;display:flex;justify-content:center;align-items:flex-end}.bc__ac__label{flex:1 1 auto;white-space:nowrap}.bc__ac__dice-tray{grid-area:diceTray}.bc__ac__dice-tray__dice{display:flex}.bc__ac__value-indicator{width:4em;display:flex;margin:0 0 0 .5rem}.bc__ac__value-indicator span{width:1em;margin:0 -0.1em;padding:0;display:inline-block;cursor:pointer}.bc__ac__value-indicator span::before{margin:0}.bc__ac__input{flex:1 1 auto}input[type=text]{background:#fff;border-radius:0}.bc__ac__label{height:26px;line-height:26px}.bc__ac__backpack{grid-area:backpack;display:flex;flex-direction:column}.bc__ac__bag{grid-area:bag;display:flex;flex-direction:column}.bc__ac__description{grid-area:description}.bc__ac__description input[type=text]{background:transparent;border-top:none;border-right:none;border-left:none;border-radius:0;font-weight:600}.bc__ac__portrait{grid-area:portrait;background:#fff}.bc__ac__portrait img{vertical-align:bottom}.bc__ac__scars_experience{grid-area:scars;display:flex;flex-direction:column;gap:.5rem}.bc__ac__expertise{grid-area:expertise;display:flex;flex-direction:column;gap:.5rem}.bc__ac__feelings{grid-area:feelings}.bc__ac__i_feel__state{width:7rem}.bc__ac__i_feel__state:first-child{text-align:right}.bc__ac__i_feel__state span{cursor:pointer}.bc__ac__i_feel__state span::before{margin:0}.bc__ac__i_feel__field{width:4.5rem;text-align:center;font-size:.8rem;color:#bbb;display:flex;flex-direction:column;gap:.5rem}.bc__ac__fields_and_skills{grid-area:skills}.bc-actorsheet-skills{margin-bottom:3rem}.bc__ac-skills{display:flex;font-size:1.2rem;justify-content:flex-end}.bc__ac-fields{display:flex;font-size:1.5rem;justify-content:flex-end;margin-right:3rem}.bc__ac__the_luck{grid-area:luck}.bc__ac__the_luck__row{display:flex;align-items:center}input[type=text].bc__ac__the_luck__max_luck{width:1.5rem;margin-left:.5rem;margin-right:auto}.bc__ac__the_luck__count{margin-right:auto;font-size:.8rem}.bc__ac__the_luck__count input[type=checkbox]{margin:0}.bc__ac__the_luck__coin{display:flex;flex-direction:column;align-items:center;justify-content:center}input[type=text].bc__ac__the_luck__luck_coins{width:2rem;height:2rem;font-size:1.5rem;text-align:center;line-height:2rem;padding:0}.bc__ac__mags{grid-area:mags;display:flex;flex-direction:column;gap:.5rem}.bc__ac__mags__row{display:flex;gap:.25rem}.bc__ac__mags__row span:first-child{flex:1 1 auto}.bc__ac__mags__pocket,.bc__ac__mags__bag,.bc__ac__mags__backpack{flex:0 0 2rem}.bc__ac__mags__label{overflow:hidden;font-size:.4rem;color:#666;text-transform:uppercase;flex:0 0 2rem;text-align:center}.bc__ac__pockets{grid-area:pockets;display:flex;flex-direction:column}.bc__ac__weapons_gear{grid-area:weapons;display:flex;flex-direction:column;gap:.5rem}.bc__ac__weapons_gear__row{display:flex;align-items:center}.bc__ac__weapons_gear__name{flex:1 1 30%}.bc__ac__weapons_gear__description,input[type=text].bc__ac__weapons_gear__description{flex:2 1 70%;font-size:.8em;height:20px}', "@font-face {\n  font-family: 'brokencompass';\n  src: url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710');\n  src: url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.eot?27449710#iefix') format('embedded-opentype'),\n  url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff2?27449710') format('woff2'),\n  url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.woff?27449710') format('woff'),\n  url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.ttf?27449710') format('truetype'),\n  url('./systems/brokencompass/assets/font/fontello-bc/brokencompass.svg?27449710#brokencompass') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'brokencompass';\n    src: url('../font/brokencompass.svg?27449710#brokencompass') format('svg');\n  }\n}\n*/\n\n[class^='icon-']::before,\n[class*=' icon-']::before {\n  font-family: 'brokencompass';\n  font-style: normal;\n  font-weight: normal;\n  speak: never;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: 0.2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: 0.2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-diamond_black_down::before {\n  content: '\\e800';\n}\n\n/* '' */\n.icon-diamond_black_up::before {\n  content: '\\e801';\n}\n\n/* '' */\n.icon-diamond_white_down::before {\n  content: '\\e802';\n}\n\n/* '' */\n.icon-diamond_white_up::before {\n  content: '\\e803';\n}\n\n/* '' */\n", ".bc__ac__body {\n  display: grid;\n  grid-template-columns: 280px repeat(4, 1fr);\n  grid-template-rows:  auto;\n  grid-gap: 1rem;\n  width: 750px;\n\n  grid-template-areas:\n    'description description description portrait portrait'\n    'skills diceTray diceTray diceTray diceTray'\n    'skills luck luck luck luck'\n    'skills feelings feelings feelings feelings'\n    'skills expertise expertise scars scars'\n    'skills weapons weapons weapons weapons'\n    'skills pockets pockets bag bag'\n    'skills backpack backpack mags mags'\n    'skills . . . .';\n}\n\n.bc__ac__row {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.bc__ac__c_row {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 0.5rem;\n}\n\n", ".bc__ac__subheading {\n  font-size: 1.3rem;\n  text-align: center;\n  font-weight: 500;\n  line-height: 1;\n  height: 2.3rem;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.bc__ac__label {\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n", ".bc__ac__dice-tray {\n  grid-area: diceTray;\n}\n\n.bc__ac__dice-tray__dice {\n  display: flex;\n}\n", '.bc__ac__value-indicator {\n  width: 4em;\n  display: flex;\n  margin: 0 0 0 0.5rem;\n\n  span {\n    width: 1em;\n    margin: 0 -0.1em;\n    padding: 0;\n    display: inline-block;\n\n    cursor: pointer;\n\n    &::before {\n      margin: 0;\n    }\n  }\n}\n\n.bc__ac__input {\n  flex: 1 1 auto;\n}\n\ninput[type="text"] {\n  background: #ffffff;\n  border-radius: 0;\n}\n\n.bc__ac__label {\n  height: 26px;\n  line-height: 26px;\n}\n', ".bc__ac__backpack {\n  grid-area: backpack;\n  display: flex;\n  flex-direction: column;\n}\n", ".bc__ac__bag {\n  grid-area: bag;\n  display: flex;\n  flex-direction: column;\n}\n\n", '.bc__ac__description {\n  grid-area: description;\n\n  input[type="text"] {\n    background: transparent;\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    border-radius: 0;\n    font-weight: 600;\n  }\n}\n\n', ".bc__ac__portrait {\n  grid-area: portrait;\n  background: #ffffff;\n\n  img {\n    vertical-align: bottom;\n  }\n}\n", ".bc__ac__scars_experience {\n  grid-area: scars;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n", ".bc__ac__expertise {\n  grid-area: expertise;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n", ".bc__ac__feelings {\n  grid-area: feelings;\n}\n\n.bc__ac__i_feel__state {\n  width: 7rem;\n\n  &:first-child {\n    text-align: right;\n  }\n\n  span {\n    cursor: pointer;\n\n    &::before {\n      margin: 0;\n    }\n  }\n}\n\n.bc__ac__i_feel__field {\n  width: 4.5rem;\n  text-align: center;\n  font-size: 0.8rem;\n  color: #bbbbbb;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n", ".bc__ac__fields_and_skills {\n  grid-area: skills;\n}\n\n.bc-actorsheet-skills {\n  margin-bottom: 3rem;\n}\n\n.bc__ac-skills {\n  display: flex;\n  font-size: 1.2rem;\n  justify-content: flex-end;\n}\n\n.bc__ac-fields {\n  display: flex;\n  font-size: 1.5rem;\n  justify-content: flex-end;\n  margin-right: 3rem;\n}\n", '.bc__ac__the_luck {\n  grid-area: luck;\n}\n\n.bc__ac__the_luck__row {\n  display: flex;\n  align-items: center;\n}\n\ninput[type="text"].bc__ac__the_luck__max_luck {\n  width: 1.5rem;\n  margin-left: 0.5rem;\n  margin-right: auto;\n}\n\n.bc__ac__the_luck__count {\n  margin-right: auto;\n  font-size: 0.8rem;\n\n  input[type="checkbox"] {\n    margin: 0;\n  }\n}\n\n.bc__ac__the_luck__coin {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\ninput[type="text"].bc__ac__the_luck__luck_coins {\n  width: 2rem;\n  height: 2rem;\n  font-size: 1.5rem;\n  text-align: center;\n  line-height: 2rem;\n  padding: 0;\n}\n', ".bc__ac__mags {\n  grid-area: mags;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.bc__ac__mags__row {\n  display: flex;\n  gap: 0.25rem;\n\n  span:first-child {\n    flex: 1 1 auto;\n  }\n}\n\n.bc__ac__mags__pocket,\n.bc__ac__mags__bag,\n.bc__ac__mags__backpack {\n  flex: 0 0 2rem;\n}\n\n.bc__ac__mags__label {\n  overflow: hidden;\n  font-size: 0.4rem;\n  color: #666666;\n  text-transform: uppercase;\n  flex: 0 0 2rem;\n  text-align: center;\n}\n", ".bc__ac__pockets {\n  grid-area: pockets;\n  display: flex;\n  flex-direction: column;\n}\n\n", '.bc__ac__weapons_gear {\n  grid-area: weapons;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.bc__ac__weapons_gear__row {\n  display: flex;\n  align-items: center;\n}\n\n.bc__ac__weapons_gear__name {\n  flex: 1 1 30%;\n}\n\n.bc__ac__weapons_gear__description,\ninput[type="text"].bc__ac__weapons_gear__description {\n  flex: 2 1 70%;\n  font-size: 0.8em;\n  height: 20px\n}\n'],
                    sourceRoot: ""
                }]);
                const i = r
            },
            645: e => {
                e.exports = function(e) {
                    var n = [];
                    return n.toString = function() {
                        return this.map((function(n) {
                            var t = "",
                                a = void 0 !== n[5];
                            return n[4] && (t += "@supports (".concat(n[4], ") {")), n[2] && (t += "@media ".concat(n[2], " {")), a && (t += "@layer".concat(n[5].length > 0 ? " ".concat(n[5]) : "", " {")), t += e(n), a && (t += "}"), n[2] && (t += "}"), n[4] && (t += "}"), t
                        })).join("")
                    }, n.i = function(e, t, a, s, c) {
                        "string" == typeof e && (e = [
                            [null, e, void 0]
                        ]);
                        var r = {};
                        if (a)
                            for (var i = 0; i < this.length; i++) {
                                var o = this[i][0];
                                null != o && (r[o] = !0)
                            }
                        for (var l = 0; l < e.length; l++) {
                            var _ = [].concat(e[l]);
                            a && r[_[0]] || (void 0 !== c && (void 0 === _[5] || (_[1] = "@layer".concat(_[5].length > 0 ? " ".concat(_[5]) : "", " {").concat(_[1], "}")), _[5] = c), t && (_[2] ? (_[1] = "@media ".concat(_[2], " {").concat(_[1], "}"), _[2] = t) : _[2] = t), s && (_[4] ? (_[1] = "@supports (".concat(_[4], ") {").concat(_[1], "}"), _[4] = s) : _[4] = "".concat(s)), n.push(_))
                        }
                    }, n
                }
            },
            537: e => {
                e.exports = function(e) {
                    var n = e[1],
                        t = e[3];
                    if (!t) return n;
                    if ("function" == typeof btoa) {
                        var a = btoa(unescape(encodeURIComponent(JSON.stringify(t)))),
                            s = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),
                            c = "/*# ".concat(s, " */"),
                            r = t.sources.map((function(e) {
                                return "/*# sourceURL=".concat(t.sourceRoot || "").concat(e, " */")
                            }));
                        return [n].concat(r).concat([c]).join("\n")
                    }
                    return [n].join("\n")
                }
            },
            379: e => {
                var n = [];

                function t(e) {
                    for (var t = -1, a = 0; a < n.length; a++)
                        if (n[a].identifier === e) {
                            t = a;
                            break
                        } return t
                }

                function a(e, a) {
                    for (var c = {}, r = [], i = 0; i < e.length; i++) {
                        var o = e[i],
                            l = a.base ? o[0] + a.base : o[0],
                            _ = c[l] || 0,
                            A = "".concat(l, " ").concat(_);
                        c[l] = _ + 1;
                        var p = t(A),
                            m = {
                                css: o[1],
                                media: o[2],
                                sourceMap: o[3],
                                supports: o[4],
                                layer: o[5]
                            };
                        if (-1 !== p) n[p].references++, n[p].updater(m);
                        else {
                            var d = s(m, a);
                            a.byIndex = i, n.splice(i, 0, {
                                identifier: A,
                                updater: d,
                                references: 1
                            })
                        }
                        r.push(A)
                    }
                    return r
                }

                function s(e, n) {
                    var t = n.domAPI(n);
                    return t.update(e),
                        function(n) {
                            if (n) {
                                if (n.css === e.css && n.media === e.media && n.sourceMap === e.sourceMap && n.supports === e.supports && n.layer === e.layer) return;
                                t.update(e = n)
                            } else t.remove()
                        }
                }
                e.exports = function(e, s) {
                    var c = a(e = e || [], s = s || {});
                    return function(e) {
                        e = e || [];
                        for (var r = 0; r < c.length; r++) {
                            var i = t(c[r]);
                            n[i].references--
                        }
                        for (var o = a(e, s), l = 0; l < c.length; l++) {
                            var _ = t(c[l]);
                            0 === n[_].references && (n[_].updater(), n.splice(_, 1))
                        }
                        c = o
                    }
                }
            },
            569: e => {
                var n = {};
                e.exports = function(e, t) {
                    var a = function(e) {
                        if (void 0 === n[e]) {
                            var t = document.querySelector(e);
                            if (window.HTMLIFrameElement && t instanceof window.HTMLIFrameElement) try {
                                t = t.contentDocument.head
                            } catch (e) {
                                t = null
                            }
                            n[e] = t
                        }
                        return n[e]
                    }(e);
                    if (!a) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    a.appendChild(t)
                }
            },
            216: e => {
                e.exports = function(e) {
                    var n = document.createElement("style");
                    return e.setAttributes(n, e.attributes), e.insert(n, e.options), n
                }
            },
            565: (e, n, t) => {
                e.exports = function(e) {
                    var n = t.nc;
                    n && e.setAttribute("nonce", n)
                }
            },
            795: e => {
                e.exports = function(e) {
                    var n = e.insertStyleElement(e);
                    return {
                        update: function(t) {
                            ! function(e, n, t) {
                                var a = "";
                                t.supports && (a += "@supports (".concat(t.supports, ") {")), t.media && (a += "@media ".concat(t.media, " {"));
                                var s = void 0 !== t.layer;
                                s && (a += "@layer".concat(t.layer.length > 0 ? " ".concat(t.layer) : "", " {")), a += t.css, s && (a += "}"), t.media && (a += "}"), t.supports && (a += "}");
                                var c = t.sourceMap;
                                c && "undefined" != typeof btoa && (a += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c)))), " */")), n.styleTagTransform(a, e, n.options)
                            }(n, e, t)
                        },
                        remove: function() {
                            ! function(e) {
                                if (null === e.parentNode) return !1;
                                e.parentNode.removeChild(e)
                            }(n)
                        }
                    }
                }
            },
            589: e => {
                e.exports = function(e, n) {
                    if (n.styleSheet) n.styleSheet.cssText = e;
                    else {
                        for (; n.firstChild;) n.removeChild(n.firstChild);
                        n.appendChild(document.createTextNode(e))
                    }
                }
            }
        },
        n = {};

    function t(a) {
        var s = n[a];
        if (void 0 !== s) return s.exports;
        var c = n[a] = {
            id: a,
            exports: {}
        };
        return e[a](c, c.exports, t), c.exports
    }
    t.n = e => {
        var n = e && e.__esModule ? () => e.default : () => e;
        return t.d(n, {
            a: n
        }), n
    }, t.d = (e, n) => {
        for (var a in n) t.o(n, a) && !t.o(e, a) && Object.defineProperty(e, a, {
            enumerable: !0,
            get: n[a]
        })
    }, t.o = (e, n) => Object.prototype.hasOwnProperty.call(e, n), (() => {
        var e = t(379),
            n = t.n(e),
            a = t(795),
            s = t.n(a),
            c = t(569),
            r = t.n(c),
            i = t(565),
            o = t.n(i),
            l = t(216),
            _ = t.n(l),
            A = t(589),
            p = t.n(A),
            m = t(735),
            d = {};
        d.styleTagTransform = p(), d.setAttributes = o(), d.insert = r().bind(null, "head"), d.domAPI = s(), d.insertStyleElement = _(), n()(m.Z, d), m.Z && m.Z.locals && m.Z.locals;
        class f extends Actor {}
        async function g(e, n, t, a, s = !1) {
            console.log("BrokenCompass | chatDiceRoll", {
                diceAmount: e,
                keepPairs: n,
                rollCount: t,
                actor: a,
                expertise: s
            });
            const c = await new Roll(`${e}d6`).roll();
            let r = function(e = [], n = []) {
                const t = [...n, ...e],
                    a = i(t),
                    s = function(e) {
                        const n = {
                                basic: 0,
                                critical: 0,
                                extrem: 0,
                                impossible: 0
                            },
                            t = i(e);
                        for (const [, e] of Object.entries(t)) 2 === e ? n.basic++ : 3 === e ? n.critical++ : 4 === e ? n.extrem++ : e >= 5 && n.impossible++;
                        return n
                    }(t),
                    c = [],
                    r = [];
                return t.forEach((e => {
                    a[e] >= 2 ? r.push(e) : c.push(e)
                })), r.sort(), {
                    roll: e,
                    pairsDice: r,
                    restDice: c,
                    successes: s,
                    equals: a,
                    hasGenerateSuccess: e.length > c.length
                };

                function i(e) {
                    const n = {
                        1: 0,
                        2: 0,
                        3: 0,
                        4: 0,
                        5: 0,
                        6: 0
                    };
                    return e.forEach((e => n[e] = (n[e] || 0) + 1)), n
                }
            }((c.terms[0] && c.terms[0].results ? c.terms[0].results : []).reduce(((e, n) => [...e, n.result]), []), n);
            1 !== t || r.hasGenerateSuccess || s || (console.log("BrokenCompass | Loos one success "), r = function(e) {
                const n = {
                    ...e.successes
                };
                return n.basic > 0 ? n.basic-- : n.critical > 0 ? n.critical-- : n.extrem > 0 ? n.extrem-- : n.impossible > 0 && n.impossible--, {
                    ...e,
                    successes: n
                }
            }(r)), 2 !== t || r.hasGenerateSuccess || (console.log("BrokenCompass | Loos all successes "), r.successes.basic = 0, r.successes.critical = 0, r.successes.extrem = 0, r.successes.impossible = 0);
            const i = {
                    ...r,
                    rollCount: t + 1,
                    actor: a,
                    useExpertise: r.restDice.length && 0 === t,
                    takeARisk: r.restDice.length && 0 === t && r.hasGenerateSuccess,
                    allIn: r.restDice.length && 1 === t && r.hasGenerateSuccess
                },
                o = {
                    user: game.user?._id,
                    speaker: ChatMessage.getSpeaker({
                        actor: a
                    }),
                    sound: CONFIG.sounds.dice,
                    roll: c,
                    rollMode: game.settings.get("core", "rollMode"),
                    content: await renderTemplate("systems/brokencompass/templates/chat/roll-result.hbs", i),
                    flags: {
                        templateVariables: i
                    }
                };
            await ChatMessage.create(o)
        }
        class b extends ActorSheet {
            static get defaultOptions() {
                return foundry.utils.mergeObject(super.defaultOptions, {
                    classes: ["brokencompass", "sheet"],
                    template: "systems/brokencompass/templates/actor/sheet.hbs"
                })
            }
            activateListeners(e) {
                super.activateListeners(e), e.on("click", "[data-roll]", this._rollTheDice.bind(this)), e.on("click", ".bc__ac__value-indicator span", this._onChangeValue.bind(this)), e.on("click", ".bc__ac__i_feel__state span", this._onChangeFeelingValue.bind(this)), e.on("click", ".bc__ac__dice-tray__coin_flip", this._onCoinFlip.bind(this)), e.on("change", ".bc__ac__the_luck__count input", this._onChangeLuckValue.bind(this))
            }
            getData(e) {
                const n = super.getData(e);
                return n.dice = [...Array(10).keys()].slice(2), n.luck = [...Array(Number(this.actor.system.luck.maxPoints) + 1).keys()].slice(1).map((e => ({
                    value: e,
                    checked: e <= this.actor.system.luck.points ? "checked" : ""
                }))), n.fields = this.getFieldsAndSkills(), n.feelings = this.getFeelings(), n
            }
            _onChangeValue(e) {
                e.preventDefault();
                const n = $(e.currentTarget),
                    t = n.data("value"),
                    a = n.parent().data("path");
                this.actor.update({
                    [a]: t
                })
            }
            _onChangeFeelingValue(e) {
                e.preventDefault();
                const n = $(e.currentTarget),
                    t = n.data("path"),
                    a = n.data("value");
                this.actor.update({
                    [t]: a
                })
            }
            _onChangeLuckValue(e) {
                e.preventDefault();
                const n = $(e.currentTarget).data("value");
                1 === Number(n) && 1 === this.actor.system.luck.points ? this.actor.update({
                    "system.luck.points": 0
                }) : this.actor.update({
                    "system.luck.points": n
                })
            }
            async _onCoinFlip(e) {
                e.preventDefault();
                const {
                    coins: n
                } = this.actor.system.luck;
                if (n < 1) return;
                const t = await new Roll("1dc").roll(),
                    a = t.terms[0] && t.terms[0].results ? t.terms[0].results : [],
                    s = {
                        user: game.user?._id,
                        speaker: ChatMessage.getSpeaker({
                            actor: this.actor
                        }),
                        sound: CONFIG.sounds.dice,
                        roll: t,
                        rollMode: game.settings.get("core", "rollMode"),
                        content: ""
                    };
                await ChatMessage.create(s), a.length && a[0].result < 1 && this.actor.update({
                    "system.luck.coins": n - 1
                })
            }
            async _rollTheDice(e) {
                const n = e.currentTarget.dataset.roll;
                n && await g(n.split("d")[0], [], 0, this.actor)
            }
            getFieldsAndSkills() {
                return [{
                    name: "action",
                    skills: ["fight", "leadership", "stunt"]
                }, {
                    name: "guts",
                    skills: ["cool", "drive", "shoot"]
                }, {
                    name: "knowledge",
                    skills: ["culture", "firstAid", "tech"]
                }, {
                    name: "society",
                    skills: ["charm", "eloquence", "observation"]
                }, {
                    name: "wild",
                    skills: ["scout", "survival", "tough"]
                }, {
                    name: "crime",
                    skills: ["alert", "dexterity", "stealth"]
                }].map((e => {
                    const n = e.skills.map((e => ({
                        name: e,
                        value: this.actor.system.skills[e],
                        label: game.i18n.localize(`BC.Sheet.Skills.${this.capitalisation(e)}`),
                        path: `system.skills.${e}`
                    })));
                    return {
                        name: e.name,
                        value: this.actor.system.fields[e.name],
                        label: game.i18n.localize(`BC.Sheet.Fields.${this.capitalisation(e.name)}`),
                        skills: n,
                        path: `system.fields.${e.name}`
                    }
                }))
            }
            getFeelings() {
                return [{
                    name: "action",
                    states: ["powerful", "bleeding"]
                }, {
                    name: "guts",
                    states: ["daring", "shocked"]
                }, {
                    name: "knowledge",
                    states: ["focused", "dizzy"]
                }, {
                    name: "society",
                    states: ["confident", "embarrassed"]
                }, {
                    name: "wild",
                    states: ["fierce", "broken"]
                }, {
                    name: "crime",
                    states: ["untouchable", "scared"]
                }].map((e => ({
                    field: game.i18n.localize(`BC.Sheet.Fields.${this.capitalisation(e.name)}`),
                    good: {
                        path: `system.feelings.${e.states[0]}`,
                        value: this.actor.system.feelings[e.states[0]],
                        name: game.i18n.localize(`BC.Sheet.Feelings.${this.capitalisation(e.states[0])}`)
                    },
                    bad: {
                        path: `system.feelings.${e.states[1]}`,
                        value: this.actor.system.feelings[e.states[1]],
                        name: game.i18n.localize(`BC.Sheet.Feelings.${this.capitalisation(e.states[1])}`)
                    }
                })))
            }
            capitalisation(e) {
                return e.charAt(0).toUpperCase() + e.slice(1)
            }
        }

        function u(e, n) {
            console.log("BrokenCompass | Register chatListeners "), n.on("click", "[data-action]", (e => {
                const {
                    dataset: n
                } = e.currentTarget, t = $(e.currentTarget).closest("[data-actor]").data("actor"), a = game.actors.get(t);
                let s;
                switch (n.action) {
                    case "reroll":
                        s = n.values.split("|"), g(Number(s[0]), s[1].split(","), Number(s[2]), a, "1" === s[3])
                }
            }))
        }
        Hooks.on("renderChatLog", u), Hooks.on("renderChatPopout", u), Hooks.on("renderChatMessage", (function(e, n, t) {
            const a = n.find(".brokencompass.chat-card");
            if (!a.length > 0) return;
            let s = game.actors.get(t.message.speaker.actor);
            s && s.isOwner || game.user.isGM || t.author.id === game.user.id || a.find("button[data-action]").each(((e, n) => {
                n.style.display = "none"
            }))
        })), Hooks.once("init", (async () => {
            console.log("BrokenCompass | Initializing Broken Compass game system"), CONFIG.Actor.entityClass = f, await async function() {
                return loadTemplates(["systems/brokencompass/templates/actor/partials/dice-tray.hbs", "systems/brokencompass/templates/actor/partials/fields.hbs"])
            }(), Actors.unregisterSheet("core", ActorSheet), Actors.registerSheet("brokencompass", b, {
                types: ["character"],
                makeDefault: !0
            })
        })), Handlebars.registerHelper("greaterThan", (function(e, n, t) {
            return e > n ? t.fn(this) : t.inverse(this)
        })), Handlebars.registerHelper("times", (function(e, n) {
            for (var t = "", a = 0; a < e; ++a) t += n.fn(a);
            return t
        }))
    })()
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
